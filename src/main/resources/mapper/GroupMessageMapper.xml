<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.scau.dbclub.mychat.dao.GroupMessageMapper">
  <resultMap id="BaseResultMap" type="cn.edu.scau.dbclub.mychat.pojo.do0.GroupMessage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="sender_id" jdbcType="INTEGER" property="senderId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="location" jdbcType="VARCHAR" property="location" />
  </resultMap>
  <delete id="deleteGroupMessage" parameterType="java.lang.Integer">
    delete from group_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertGroupMessage" parameterType="cn.edu.scau.dbclub.mychat.pojo.do0.GroupMessage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into group_message (group_id, sender_id, `time`, 
      content, `location`)
    values (#{groupId,jdbcType=INTEGER}, #{senderId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR})
  </insert>
  <update id="updateGroupMessage" parameterType="cn.edu.scau.dbclub.mychat.pojo.do0.GroupMessage">
    update group_message
    set group_id = #{groupId,jdbcType=INTEGER},
      sender_id = #{senderId,jdbcType=INTEGER},
      `time` = #{time,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      `location` = #{location,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectGroupMessage" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, group_id, sender_id, `time`, content, `location`
    from group_message
    where id = #{id,jdbcType=INTEGER}

  </select>
  <!-- 2020-6-8更新 -->
  <select id="selectOlderGroupMessage" parameterType="cn.edu.scau.dbclub.mychat.pojo.do0.GroupMessage" resultMap="BaseResultMap">
    select id, group_id, sender_id, `time`, content, `location`
    from group_message
    where group_id = #{groupId}
     and id &lt;= #{id}
  </select>


  <select id="selectEarliestGroupMessage" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, group_id, sender_id, `time`, content, `location`
    from group_message
    where group_id = #{groupId,jdbcType=INTEGER} 
    <!--
    and `time` in (select MAX(`time`) from group_message where group_id = #{groupId,jdbcType=INTEGER} )
    -->
   and id in (select MAX(id) from group_message where group_id = #{groupId,jdbcType=INTEGER} )
</select>
  
 <select id="selectUnReadGroupMessagesByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    with ss as(
   select group_id ,group_msg_id 
   from group_mem
   where user_id =  #{userId,jdbcType=INTEGER}  )
   select group_message.id, group_message.group_id,group_message.sender_id,group_message.time,group_message.content,group_message.location
   from  group_message NATURAL join ss
   where group_message.id > group_msg_id
  </select>
</mapper>